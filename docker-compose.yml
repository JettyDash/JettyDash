version: '3.9'

services:
  
  backend:
    build: ./BackendApplication/Api
    container_name: backend
    ports:
      - "5000:5000"
    volumes:
      - ./BackendApplication:/app
    depends_on:
      - postgres
    networks:
      - backend-network
    environment:
      ASPNETCORE_ENVIRONMENT:
        ${ASPNETCORE_ENVIRONMENT}
      ASPNETCORE_URLS:
        ${ASPNETCORE_URLS}
      ConnectionStrings__DefaultConnection:
        ${CONNECTION_STRINGS__DEFAULT_CONNECTION}
      JwtConfig__Secret:
        ${JWT_CONFIG__SECRET}
      JwtConfig__Issuer:
        ${JWT_CONFIG__ISSUER}
      JwtConfig__Audience:
        ${JWT_CONFIG__AUDIENCE}
      JwtConfig__AccessExpiration:
        ${JWT_CONFIG_ACCESS_EXPIRATION}
      JwtConfig__RefreshExpiration:
        ${JWT_CONFIG_REFRESH_EXPIRATION}
  
  
  
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    networks:
      - backend-network
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_DB}
      POSTGRES_PORT: ${DATABASE_PORT}

networks:
  backend-network:
    driver: bridge
volumes:
  postgres-data:
